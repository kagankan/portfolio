.LoadingScreen {
  --mesh-current: 0px;
  --line-current: 0%;
  --line-vertical: var(--line-current);
  --line-horizontal: var(--line-current);
  --line-color: #fff;

  position: fixed;
  inset: 0;
  z-index: var(--z-index-loading-screen);
  background-image: linear-gradient(to right, var(--line-color) 1px, transparent 1px),
    // 縦線
    linear-gradient(var(--line-color) 1px, transparent 1px); // 横線
  background-repeat: repeat no-repeat, no-repeat repeat;
  background-size: var(--mesh-size) var(--line-vertical), var(--line-horizontal) var(--mesh-size);
  mask-composite: intersect;
  mask-image: linear-gradient(
      to bottom,
      transparent var(--mesh-current),
      #000 var(--mesh-current) calc(var(--mesh-size) - var(--mesh-current)),
      transparent calc(var(--mesh-size) - var(--mesh-current))
    ),
    linear-gradient(
      to right,
      transparent var(--mesh-current),
      #000 var(--mesh-current) calc(var(--mesh-size) - var(--mesh-current)),
      transparent calc(var(--mesh-size) - var(--mesh-current))
    );
  mask-size: var(--mesh-size) var(--mesh-size);

  // NOTE: background-positionによるアニメーションは描画負荷が高いため、transformを使用する
  // https://takumifukasawa.hatenablog.com/entry/css-sprite-animation-gpu-rendering
  &::before {
    position: absolute;
    inset-block: 0;
    z-index: -1;
    width: 200%;
    content: "";
    background-image: repeating-linear-gradient(
      120deg,
      var(--color-primary) 20%,
      var(--color-secondary-light) 45% 55%,
      var(--color-primary) 80%
    );
    background-size: 100% 100%;
    animation: loading 2s infinite linear;
    inset-inline-start: 0;
  }
  @keyframes loading {
    from {
      transform: translateX(-50%);
    }
    to {
      transform: translateX(0%);
    }
  }
}
